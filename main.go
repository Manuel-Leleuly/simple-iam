package main

import (
	"github.com/Manuel-Leleuly/simple-iam/controllers"
	"github.com/Manuel-Leleuly/simple-iam/initializers"
	"github.com/Manuel-Leleuly/simple-iam/middlewares"
	"github.com/gin-gonic/gin"

	_ "github.com/Manuel-Leleuly/simple-iam/swagger"
	swaggerfiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

func init() {
	initializers.LoadEnvVariables()
	initializers.ConnectToDB()
	initializers.SyncDatabase()
}

// @title 						Simple IAM
// @version 					1.0
// @description 				A simple IAM made by me
// @termsOfService 				http://swagger.io/terms/

// @license.name 				Apache 2.0
// @license.url 				https://www.apache.org/licenses/LICENSE-2.0.html

// @host 						localhost:3005

// @securityDefinitions.apikey 	ApiKeyAuth
// @in 							header
// @name 						Authorization
// @description 				use access token generated by the login endpoint

const basePath string = "/iam/v1"

func main() {
	server := gin.Default()

	// swagger route
	server.GET("/iam/apidocs/*any", ginSwagger.WrapHandler(swaggerfiles.Handler))

	// TODO: put this in route folder
	withoutTokenChecker := server.Group(basePath)
	withoutTokenChecker.POST("/login", controllers.Login)
	withoutTokenChecker.POST("/users", controllers.CreateUser)

	withAccessChecker := server.Group(basePath, middlewares.CheckAccessToken)
	withAccessChecker.GET("/users", controllers.GetUserList)
	withAccessChecker.GET("/users/:userId", controllers.GetUserDetail)
	withAccessChecker.PATCH("/users/:userId", controllers.UpdateUser)
	withAccessChecker.DELETE("/users/:userId", controllers.DeleteUser)

	withRefreshChecker := server.Group(basePath, middlewares.CheckRefreshToken)
	withRefreshChecker.GET("/token/refresh", middlewares.CheckRefreshToken, controllers.RefreshToken)

	// why port 3005? That's a mystery even I can't answer
	err := server.Run(":3005")
	if err != nil {
		panic("[Error] failed to start Gin server due to: " + err.Error())
	}
}
